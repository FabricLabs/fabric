{
  "name": "@fabric/core",
  "version": "0.1.0-dev",
  "description": "experimental p2p framework",
  "main": "types/fabric.js",
  "module": "index.js",
  "bin": {
    "fabric": "scripts/cli.js"
  },
  "directories": {
    "doc": "docs",
    "example": "examples",
    "test": "tests"
  },
  "engines": {
    "node": "^16.15.0"
  },
  "scripts": {
    "audit": "npm audit --json --level critical > reports/AUDIT.json",
    "book": "npm run dev",
    "build": "npm run make:all",
    "build:book": "npm run make:book && npm run tidy",
    "chat": "node scripts/cli.js chat",
    "clean": "rm -rf node_modules",
    "clean:all": "rm -rf node_modules package-lock.json",
    "cli": "npm run chat",
    "coverage": "c8 npm test",
    "dev": "npm run make:dev && http-server -p 8000 _book",
    "docs": "npm run make:api && npm run make:docs && http-server -p 8000 docs",
    "examples": "npm run make:examples && http-server -p 8000 examples",
    "keygen": "node scripts/keygen.js",
    "local": "npm run build && http-server -p 8000 ./assets",
    "lint": "npx semistandard",
    "lint:fix": "npx semistandard --fix",
    "make:all": "npm run make:service && npm run make:app && npm run make:lib && npm run make:dev # && npm run make:binary",
    "make:api": "jsdoc2md --configure jsdoc.json --files types/*.js schemata/*.js services/*.js settings/deprecations.js README.md > API.md",
    "make:app": "### ERROR: Not yet implemented.  Debug: `examples/app.js` to `assets/app.js`",
    "make:book": "mkdir -p _book && honkit build",
    "make:binary": "pkg -c package.json -o assets/binaries/fabric scripts/cli.js",
    "make:coverage": "npm run coverage && c8 report --reporter html",
    "make:dev": "npm run make:examples && npm run make:docs && npm run make:book && cp -rf docs _book/ && cp -rf examples _book/ && glob-run js-beautify --indent-size 2 -r _book/**.html",
    "make:docs": "npm run make:api && node_modules/.bin/jsdoc -c jsdoc.json services/**.js types/**.js settings/deprecations.js DEVELOPERS.md -d docs/ && glob-run js-beautify --indent-size 2 -r docs/**.html",
    "make:examples": "# docco --output examples/ examples/*.js && glob-run js-beautify --indent-size 2 -r examples/*.html",
    "make:lib": "### ERROR: Not yet implemented.  Debug: `scripts/fabric.js` to `assets/fabric.min.js`",
    "make:nix": "node2nix --lock package-lock.json --nodejs-16 --node-env .nix/node-env.nix --output .nix/node-packages.nix",
    "make:service": "### ERROR: Not yet implemented.  Debug: ` examples/service.js` to `aassets/service.js`",
    "make:viewer": "### ERROR: Not yet implemented.  Debug: `components/circuit-viewer.js` to `aassets/viewer.min.js`",
    "postinstall": "npm run make:nix",
    "report:credits": "node_modules/.bin/license-checker --json > reports/credits.json",
    "report:coverage": "npm run make:coverage && c8 report --reporter=text-lcov > reports/coverage.lcov",
    "report:legal": "node_modules/.bin/license-checker --json > reports/licenses.json",
    "report:todo": "grep --exclude-dir=.git --exclude-dir=_book --exclude-dir=assets --exclude-dir=node_modules --exclude-dir=reports --exclude-dir=coverage --exclude-dir=docs -rEI \"TODO|FIXME\" . > reports/TODO.txt",
    "review:coverage": "npm run make:coverage && http-server -p 8000 reports/coverage",
    "review:todo": "npm run report:todo && cat reports/TODO.txt && echo '\nOutstanding TODO items (@fabric/core):' && wc -l reports/TODO.txt && echo '\nIssues List: https://github.com/FabricLabs/fabric/issues\nDisclosures: securiy@fabric.pub\n\n'",
    "playnet": "node scripts/playnet.js",
    "start": "node scripts/app.js",
    "static": "npm run build:scripts && http-server -p 8000 assets",
    "test:app": "npm run make:service && npm run make:app && NODE_ENV=test mocha tests/fabric.app.js",
    "test:bitcoin": "mocha tests/bitcoin.core.js",
    "test:ethereum": "mocha tests/ethereum.core.js",
    "test": "NODE_ENV=test mocha tests",
    "tidy": "glob-run js-beautify --indent-size 2 -r _book/**.html",
    "watch:book": "honkit serve --port 8000 # NOTE: /docs and /examples may not be available."
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/FabricLabs/fabric.git"
  },
  "keywords": [
    "fabric",
    "p2p",
    "application",
    "architecture",
    "serverless",
    "web"
  ],
  "author": "Fabric Labs",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/FabricLabs/fabric/issues"
  },
  "homepage": "https://github.com/FabricLabs/fabric#readme",
  "dependencies": {
    "arbitrary": "1.4.10",
    "base58check": "2.0.0",
    "bech32-buffer": "0.2.0",
    "bip-schnorr": "0.6.6",
    "bip32": "3.0.1",
    "bip39": "3.0.4",
    "bip65": "1.0.3",
    "bip68": "1.0.4",
    "bitcoinjs-lib": "6.0.0",
    "blessed": "0.1.81",
    "clightningjs": "0.2.2",
    "commander": "6.1.0",
    "content-type": "1.0.4",
    "dotparser": "0.3.0",
    "ecpair": "2.0.1",
    "elliptic": "6.5.4",
    "fast-json-patch": "2.0.7",
    "fd-chunk-store": "2.0.0",
    "glob-run": "0.1.7",
    "javascript-state-machine": "3.1.0",
    "jayson": "3.4.4",
    "json-pointer": "0.6.2",
    "level": "7.0.1",
    "lodash.merge": "4.6.2",
    "merkletreejs": "0.1.6",
    "minsc": "0.2.0",
    "mkdirp": "1.0.4",
    "path-match": "1.2.4",
    "pluralize": "8.0.0",
    "redis": "3.1.2",
    "rimraf": "2.6.2",
    "simple-aes": "0.1.1",
    "struct": "0.0.12",
    "tiny-secp256k1": "2.2.1",
    "ts-morph": "10.0.2",
    "zeromq": "5.2.8"
  },
  "devDependencies": {
    "c8": "7.11.3",
    "chai": "4.0.2",
    "cross-env": "5.1.3",
    "debug-trace": "2.2.1",
    "docco": "0.7.0",
    "eccrypto": "1.0.3",
    "eslint": "5.16.0",
    "honkit": "3.7.1",
    "http-server": "14.1.1",
    "is-my-json-valid": "2.20.6",
    "js-beautify": "1.14.3",
    "jsdoc": "3.6.11",
    "jsdoc-to-markdown": "7.1.1",
    "json-to-dot": "1.1.0",
    "license-checker": "25.0.1",
    "mocha": "10.0.0",
    "node2nix": "1.11.0"
  },
  "c8": {
    "exclude": [
      "assets",
      "contracts",
      "currencies",
      "functions",
      "tests",
      "data"
    ],
    "report-dir": "./reports/coverage",
    "temp-dir": "./reports/c8"
  },
  "pkg": {
    "@targets": [
      "node16-linux-arm64",
      "node16-linux-x64",
      "node16-macos-x64",
      "node16-windows-x64"
    ]
  },
  "semistandard": {
    "ignore": [
      "assets/",
      "logs/",
      "stores/"
    ]
  }
}
